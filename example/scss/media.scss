// import the grid
@import "../../stylesheets/grid";
@import "../../stylesheets/grid/fluid";

// generic styles
.float-left, .float-right { margin-bottom: ($grid-gutter-width / 2); }
.float-left { float: left; margin-right: ($grid-gutter-width / 2); }
.float-right { float: right; margin-left: ($grid-gutter-width / 2); }

// set up main layout
header, #main, footer {
	@include grid-page();
}
header, footer {
	width: grid-column-width(12);
}
header {
	background-color: blue;
	height: grid-column-width(1.5)
}
footer {
	background-color: #ccc;
}
.left-column {
	@include grid-column(3);
}
.main-column {
	@include grid-column(9);
	section {
		@include grid-row();
	}
	section.intro {
		margin: 0;
	}
	article {
		@include grid-column(6);
	}
	aside {
		@include grid-column(3);
		.box img {
			width: grid-column-width(3);
		}
	}
}

//-----------------------------------
// Responsive
//-----------------------------------
// Old/Small Android
// smaller than 320px
// 3 columns
@media only screen and (min-width: 0px) {
	.measure { background-color: red; }
	header, #main, footer {
		@include fluid-page();
	}
	header, footer {
		max-width: none;
		width: auto;
		margin: 0 fluid-width($grid-gutter-width/2, grid-column-width(4, $grid-gutter-width));
	}
	.left-column {
		@include fluid-column(4, $context: 4);
	}
	.main-column {
		@include fluid-column(4, $context: 4);
		section {
			@include fluid-row();
		}
		section.intro {
			margin: 0;
		}
		article {
			@include fluid-column(4, $context: 4);

			.float-left, .float-right { margin-bottom: fluid-width($grid-gutter-width / 2, grid-column-width(4)); }
			.float-left { float: none; margin-right: 0; }
			.float-right { float: none; margin-left: 0; }
			img.grid-3 { @include fluid(4, $context: 4, $context-plus: -$grid-gutter-width); }
		}
		aside {
			@include fluid-column(4, $context: 4);
			.box img {
				width: fluid-column-width(4, $context: 4, $context-plus: -$grid-gutter-width);
			}
		}
	}
}

// iPhone
// Old/Small Android (landscape)
// 320px to 480px
// 4 to 6 columns
@media only screen and (min-width: 320px) {
	.measure { background-color: orange; }
}

// Most Android Phones
// iPhone (landscape)
// 480px to 540px
// 6 to 7 columns
@media only screen and (min-width: 480px) {
	.measure { background-color: yellow; }
	header, #main, footer {
		@include fluid-page();
	}
	header, footer {
		max-width: none;
		width: auto;
		margin: 0 fluid-width($grid-gutter-width/2, grid-column-width(6, $grid-gutter-width));
	}
	.left-column {
		@include fluid-column(6, $context: 6);
	}
	.main-column {
		@include fluid-column(6, $context: 6);
		section {
			@include fluid-row();
		}
		section.intro {
			margin: 0;
		}
		article {
			@include fluid-column(6, $context: 6);
			.float-left, .float-right { margin-bottom: fluid-width($grid-gutter-width / 2, grid-column-width(6)); }
			.float-left { float: left; margin-right: fluid-width($grid-gutter-width / 2, grid-column-width(6)); }
			.float-right { float: right; margin-left: fluid-width($grid-gutter-width / 2, grid-column-width(6)); }
			img.grid-3 { @include fluid(3, $context: 6, $context-plus: -$grid-gutter-width); }
		}
		aside {
			@include fluid-column(6, $context: 6);
			.box img {
				width: fluid-column-width(6, $context: 6, $context-plus: -$grid-gutter-width);
			}
		}
	}
}

// New Droids/HTC
// 540px to 600px
// 7 columns
@media only screen and (min-width: 540px) {
	// skip
	.measure { background-color: green; }
}

// Kindle Fire
// 600px to 768px
// 7 to 9 columns
@media only screen and (min-width: 600px) {
	.measure { background-color: blue; color: white; }
	header, #main, footer {
		@include fluid-page();
	}
	header, footer {
		max-width: none;
		width: auto;
		margin: 0 fluid-width($grid-gutter-width/2, grid-column-width(8, $grid-gutter-width));
	}
	.left-column {
		@include fluid-column(3, $context: 8);
	}
	.main-column {
		@include fluid-column(5, $context: 8);
		section {
			@include fluid-row();
		}
		section.intro {
			margin: 0;
		}
		article {
			@include fluid-column(5, $context: 5);
			.float-left, .float-right { margin-bottom: fluid-width($grid-gutter-width / 2, grid-column-width(5)); }
			.float-left { float: left; margin-right: fluid-width($grid-gutter-width / 2, grid-column-width(5)); }
			.float-right { float: right; margin-left: fluid-width($grid-gutter-width / 2, grid-column-width(5)); }
			img.grid-3 { @include fluid(3, $context: 5, $context-plus: -$grid-gutter-width); }
		}
		aside {
			@include fluid-column(5, $context: 5);
			.box img {
				width: fluid-column-width(5, $context: 5, $context-plus: -$grid-gutter-width);
			}
		}
	}
}

// iPad
// 768px to 800px
// 9 to 10 columns
@media only screen and (min-width: 768px) {
	// skip
	.measure { background-color: purple; color: white; }
	header, #main, footer {
		@include fluid-page();
	}
	header, footer {
		max-width: none;
		width: auto;
		margin: 0 fluid-width($grid-gutter-width/2, grid-column-width(9, $grid-gutter-width));
	}
	.left-column {
		@include fluid-column(3, $context: 9);
	}
	.main-column {
		@include fluid-column(6, $context: 9);
		section {
			@include fluid-row();
		}
		section.intro {
			margin: 0;
		}
		article {
			@include fluid-column(6, $context: 6);
			.float-left, .float-right { margin-bottom: fluid-width($grid-gutter-width / 2, grid-column-width(6)); }
			.float-left { float: left; margin-right: fluid-width($grid-gutter-width / 2, grid-column-width(6)); }
			.float-right { float: right; margin-left: fluid-width($grid-gutter-width / 2, grid-column-width(6)); }
			img.grid-3 { @include fluid(3, $context: 6, $context-plus: -$grid-gutter-width); }
		}
		aside {
			@include fluid-column(6, $context: 6);
			.box img {
				width: fluid-column-width(6, $context: 6, $context-plus: -$grid-gutter-width);
			}
		}
	}
}

// Android Tablets
// 800px to 960px
// 10 to 12 columns
@media only screen and (min-width: 800px) {
	// skip
	.measure { background-color: blue; color: white; }
	header, #main, footer {
		@include fluid-page();
	}
	header, footer {
		max-width: none;
		width: auto;
		margin: 0 fluid-width($grid-gutter-width/2, grid-column-width(11, $grid-gutter-width));
	}
	.left-column {
		@include fluid-column(3, $context: 11);
	}
	.main-column {
		@include fluid-column(8, $context: 11);
		section {
			@include fluid-row();
		}
		section.intro {
			margin: 0;
		}
		article {
			@include fluid-column(5, $context: 8);
			.float-left, .float-right { margin-bottom: fluid-width($grid-gutter-width / 2, grid-column-width(5)); }
			.float-left { float: left; margin-right: fluid-width($grid-gutter-width / 2, grid-column-width(5)); }
			.float-right { float: right; margin-left: fluid-width($grid-gutter-width / 2, grid-column-width(5)); }
			img.grid-3 { @include fluid(3, $context: 5, $context-plus: -$grid-gutter-width); }
		}
		aside {
			@include fluid-column(3, $context: 8);
			.box img {
				width: fluid-column-width(3, $context: 3, $context-plus: -$grid-gutter-width);
			}
		}
	}
}

// Desktop
// 960px to 992px
// 12 columns
@media only screen and (min-width: 960px) {
	.measure { background-color: green; }

	header, #main, footer {
		@include grid-page();
	}
	header, footer {
		width: grid-column-width(12);
	}
	.left-column {
		@include grid-column(3);
	}
	.main-column {
		@include grid-column(9);
		section {
			@include grid-row();
		}
		section.intro {
			margin: 0;
		}
		article {
			@include grid-column(6);
			.float-left, .float-right { margin-bottom:($grid-gutter-width / 2); }
			.float-left { float: left; margin-right: ($grid-gutter-width / 2); }
			.float-right { float: right; margin-left: ($grid-gutter-width / 2); }
			img.grid-3 { @include grid(3); }
		}
		aside {
			@include grid-column(3);
			.box img {
				width: grid-column-width(3);
			}
		}
	}
}

// Desktop (320 and Up)
// 992px to 1024px
@media only screen and (min-width: 992px) {
	.measure { background-color: yellow; }
}

// iPad (landscape)
// Kindle Fire (landscape)
// 1024px to 1280px
@media only screen and (min-width: 1024px) {
	.measure { background-color: orange; }
}

// Android tablets (landscape)
// 1280px to infinity
@media only screen and (min-width: 1280px) {
	.measure { background-color: red; }
}

// retina display
@media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (min-device-pixel-ratio: 1.5) {

}